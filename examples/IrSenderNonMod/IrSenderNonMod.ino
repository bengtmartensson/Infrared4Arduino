// This sketch demonstrates the usage of the non-modulating sender.
// It requires an sender like TX-433 connected to pin NON_MOD_PIN

// Turn on and off an Arctech device with house code M = 13, device 8.

#include <IrSenderNonMod.h>

static constexpr pin_t NON_MOD_PIN = 10U;

// Arctech D=13, S=8, F=0 (Generated by IrScrutinizer)
static const microseconds_t offData[] = {
    388, 1164, 388, 1164, 388, 1164, 388, 1164, 388, 1164, 1164, 388, 388,
    1164, 1164, 388, 388, 1164, 1164, 388, 388, 1164, 1164, 388, 388, 1164,
    1164, 388, 388, 1164, 388, 1164, 388, 1164, 388, 1164, 388, 1164, 1164,
    388, 388, 1164, 1164, 388, 388, 1164, 388, 1164, 388, 11364
};
static const IrSequence off(offData, sizeof(offData)/sizeof(microseconds_t));

// Arctech D=13, S=8, F=1 (Generated by IrScrutinizer)
static const microseconds_t onData[] = {
    388, 1164, 388, 1164, 388, 1164, 388, 1164, 388, 1164, 1164, 388, 388,
    1164, 1164, 388, 388, 1164, 1164, 388, 388, 1164, 1164, 388, 388, 1164,
    1164, 388, 388, 1164, 388, 1164, 388, 1164, 388, 1164, 388, 1164, 1164,
    388, 388, 1164, 1164, 388, 388, 1164, 1164, 388, 388, 11364
};
static const IrSequence on(onData, sizeof(onData)/sizeof(microseconds_t));

static IrSenderNonMod sender(NON_MOD_PIN);

void setup() {
}

void loop() {
    // send it twice, since Intertechno devices seems to need that
    // for reliability
    sender.sendNonModulated(on, 2);
    delay(2000);
    sender.sendNonModulated(off, 2);
    delay(2000);
}
